//yubikey-net

using System;
using System.Collections.Generic;
using System.Text;

namespace YubiCrypt.Configurator
{
    /// <summary>
    /// Utility class for encoding and decoding Yubico's MODHex
    /// format.
    /// </summary>
    /// <remarks>
    /// <para>MODHex is the format used to encode Yubikey authentication
    /// strings.  Rather than the typical encoding formats, the
    /// alphabet used by MODHex (<c>cbdefghijklnrtuv</c>) has the advantage
    /// of being in the same location on all known keyboard layouts (or so
    /// YubiCo syas).  This makes it ideal for encoding, since the YubiKey
    /// generates fake keyboard events to simulate typing by the user.</para>
    /// <para>The general idea here are pretty much taken from the
    /// YubiCo-J project.  However, the lookup-table-based implementation is
    /// new to this C# port.</para>
    /// </remarks>
    /// <seealso cref="http://code.google.com/p/yubico-j/"/>
    public static class ModHex
    {

        #region AlienSpaceStationCoordinates
        private static readonly short[,] LOOKUP = {
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  17 ,  16 ,  18 ,  19 ,  20 ,  21 ,  22 ,  23 ,  24 ,  25 ,  26 ,  -1 ,  27 ,  -1 ,  -1 ,  -1 ,  28 ,  -1 ,  29 ,  30 ,  31 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  17 ,  16 ,  18 ,  19 ,  20 ,  21 ,  22 ,  23 ,  24 ,  25 ,  26 ,  -1 ,  27 ,  -1 ,  -1 ,  -1 ,  28 ,  -1 ,  29 ,  30 ,  31 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,   1 ,   0 ,   2 ,   3 ,   4 ,   5 ,   6 ,   7 ,   8 ,   9 ,  10 ,  -1 ,  11 ,  -1 ,  -1 ,  -1 ,  12 ,  -1 ,  13 ,  14 ,  15 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,   1 ,   0 ,   2 ,   3 ,   4 ,   5 ,   6 ,   7 ,   8 ,   9 ,  10 ,  -1 ,  11 ,  -1 ,  -1 ,  -1 ,  12 ,  -1 ,  13 ,  14 ,  15 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  33 ,  32 ,  34 ,  35 ,  36 ,  37 ,  38 ,  39 ,  40 ,  41 ,  42 ,  -1 ,  43 ,  -1 ,  -1 ,  -1 ,  44 ,  -1 ,  45 ,  46 ,  47 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  33 ,  32 ,  34 ,  35 ,  36 ,  37 ,  38 ,  39 ,  40 ,  41 ,  42 ,  -1 ,  43 ,  -1 ,  -1 ,  -1 ,  44 ,  -1 ,  45 ,  46 ,  47 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  49 ,  48 ,  50 ,  51 ,  52 ,  53 ,  54 ,  55 ,  56 ,  57 ,  58 ,  -1 ,  59 ,  -1 ,  -1 ,  -1 ,  60 ,  -1 ,  61 ,  62 ,  63 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  49 ,  48 ,  50 ,  51 ,  52 ,  53 ,  54 ,  55 ,  56 ,  57 ,  58 ,  -1 ,  59 ,  -1 ,  -1 ,  -1 ,  60 ,  -1 ,  61 ,  62 ,  63 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  65 ,  64 ,  66 ,  67 ,  68 ,  69 ,  70 ,  71 ,  72 ,  73 ,  74 ,  -1 ,  75 ,  -1 ,  -1 ,  -1 ,  76 ,  -1 ,  77 ,  78 ,  79 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  65 ,  64 ,  66 ,  67 ,  68 ,  69 ,  70 ,  71 ,  72 ,  73 ,  74 ,  -1 ,  75 ,  -1 ,  -1 ,  -1 ,  76 ,  -1 ,  77 ,  78 ,  79 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  81 ,  80 ,  82 ,  83 ,  84 ,  85 ,  86 ,  87 ,  88 ,  89 ,  90 ,  -1 ,  91 ,  -1 ,  -1 ,  -1 ,  92 ,  -1 ,  93 ,  94 ,  95 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  81 ,  80 ,  82 ,  83 ,  84 ,  85 ,  86 ,  87 ,  88 ,  89 ,  90 ,  -1 ,  91 ,  -1 ,  -1 ,  -1 ,  92 ,  -1 ,  93 ,  94 ,  95 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  97 ,  96 ,  98 ,  99 , 100 , 101 , 102 , 103 , 104 , 105 , 106 ,  -1 , 107 ,  -1 ,  -1 ,  -1 , 108 ,  -1 , 109 , 110 , 111 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  97 ,  96 ,  98 ,  99 , 100 , 101 , 102 , 103 , 104 , 105 , 106 ,  -1 , 107 ,  -1 ,  -1 ,  -1 , 108 ,  -1 , 109 , 110 , 111 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 113 , 112 , 114 , 115 , 116 , 117 , 118 , 119 , 120 , 121 , 122 ,  -1 , 123 ,  -1 ,  -1 ,  -1 , 124 ,  -1 , 125 , 126 , 127 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 113 , 112 , 114 , 115 , 116 , 117 , 118 , 119 , 120 , 121 , 122 ,  -1 , 123 ,  -1 ,  -1 ,  -1 , 124 ,  -1 , 125 , 126 , 127 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 129 , 128 , 130 , 131 , 132 , 133 , 134 , 135 , 136 , 137 , 138 ,  -1 , 139 ,  -1 ,  -1 ,  -1 , 140 ,  -1 , 141 , 142 , 143 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 129 , 128 , 130 , 131 , 132 , 133 , 134 , 135 , 136 , 137 , 138 ,  -1 , 139 ,  -1 ,  -1 ,  -1 , 140 ,  -1 , 141 , 142 , 143 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 145 , 144 , 146 , 147 , 148 , 149 , 150 , 151 , 152 , 153 , 154 ,  -1 , 155 ,  -1 ,  -1 ,  -1 , 156 ,  -1 , 157 , 158 , 159 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 145 , 144 , 146 , 147 , 148 , 149 , 150 , 151 , 152 , 153 , 154 ,  -1 , 155 ,  -1 ,  -1 ,  -1 , 156 ,  -1 , 157 , 158 , 159 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 161 , 160 , 162 , 163 , 164 , 165 , 166 , 167 , 168 , 169 , 170 ,  -1 , 171 ,  -1 ,  -1 ,  -1 , 172 ,  -1 , 173 , 174 , 175 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 161 , 160 , 162 , 163 , 164 , 165 , 166 , 167 , 168 , 169 , 170 ,  -1 , 171 ,  -1 ,  -1 ,  -1 , 172 ,  -1 , 173 , 174 , 175 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 177 , 176 , 178 , 179 , 180 , 181 , 182 , 183 , 184 , 185 , 186 ,  -1 , 187 ,  -1 ,  -1 ,  -1 , 188 ,  -1 , 189 , 190 , 191 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 177 , 176 , 178 , 179 , 180 , 181 , 182 , 183 , 184 , 185 , 186 ,  -1 , 187 ,  -1 ,  -1 ,  -1 , 188 ,  -1 , 189 , 190 , 191 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 193 , 192 , 194 , 195 , 196 , 197 , 198 , 199 , 200 , 201 , 202 ,  -1 , 203 ,  -1 ,  -1 ,  -1 , 204 ,  -1 , 205 , 206 , 207 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 193 , 192 , 194 , 195 , 196 , 197 , 198 , 199 , 200 , 201 , 202 ,  -1 , 203 ,  -1 ,  -1 ,  -1 , 204 ,  -1 , 205 , 206 , 207 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 209 , 208 , 210 , 211 , 212 , 213 , 214 , 215 , 216 , 217 , 218 ,  -1 , 219 ,  -1 ,  -1 ,  -1 , 220 ,  -1 , 221 , 222 , 223 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 209 , 208 , 210 , 211 , 212 , 213 , 214 , 215 , 216 , 217 , 218 ,  -1 , 219 ,  -1 ,  -1 ,  -1 , 220 ,  -1 , 221 , 222 , 223 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 225 , 224 , 226 , 227 , 228 , 229 , 230 , 231 , 232 , 233 , 234 ,  -1 , 235 ,  -1 ,  -1 ,  -1 , 236 ,  -1 , 237 , 238 , 239 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 225 , 224 , 226 , 227 , 228 , 229 , 230 , 231 , 232 , 233 , 234 ,  -1 , 235 ,  -1 ,  -1 ,  -1 , 236 ,  -1 , 237 , 238 , 239 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 241 , 240 , 242 , 243 , 244 , 245 , 246 , 247 , 248 , 249 , 250 ,  -1 , 251 ,  -1 ,  -1 ,  -1 , 252 ,  -1 , 253 , 254 , 255 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 241 , 240 , 242 , 243 , 244 , 245 , 246 , 247 , 248 , 249 , 250 ,  -1 , 251 ,  -1 ,  -1 ,  -1 , 252 ,  -1 , 253 , 254 , 255 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  17 ,  16 ,  18 ,  19 ,  20 ,  21 ,  22 ,  23 ,  24 ,  25 ,  26 ,  -1 ,  27 ,  -1 ,  -1 ,  -1 ,  28 ,  -1 ,  29 ,  30 ,  31 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  17 ,  16 ,  18 ,  19 ,  20 ,  21 ,  22 ,  23 ,  24 ,  25 ,  26 ,  -1 ,  27 ,  -1 ,  -1 ,  -1 ,  28 ,  -1 ,  29 ,  30 ,  31 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,   1 ,   0 ,   2 ,   3 ,   4 ,   5 ,   6 ,   7 ,   8 ,   9 ,  10 ,  -1 ,  11 ,  -1 ,  -1 ,  -1 ,  12 ,  -1 ,  13 ,  14 ,  15 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,   1 ,   0 ,   2 ,   3 ,   4 ,   5 ,   6 ,   7 ,   8 ,   9 ,  10 ,  -1 ,  11 ,  -1 ,  -1 ,  -1 ,  12 ,  -1 ,  13 ,  14 ,  15 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  33 ,  32 ,  34 ,  35 ,  36 ,  37 ,  38 ,  39 ,  40 ,  41 ,  42 ,  -1 ,  43 ,  -1 ,  -1 ,  -1 ,  44 ,  -1 ,  45 ,  46 ,  47 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  33 ,  32 ,  34 ,  35 ,  36 ,  37 ,  38 ,  39 ,  40 ,  41 ,  42 ,  -1 ,  43 ,  -1 ,  -1 ,  -1 ,  44 ,  -1 ,  45 ,  46 ,  47 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  49 ,  48 ,  50 ,  51 ,  52 ,  53 ,  54 ,  55 ,  56 ,  57 ,  58 ,  -1 ,  59 ,  -1 ,  -1 ,  -1 ,  60 ,  -1 ,  61 ,  62 ,  63 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  49 ,  48 ,  50 ,  51 ,  52 ,  53 ,  54 ,  55 ,  56 ,  57 ,  58 ,  -1 ,  59 ,  -1 ,  -1 ,  -1 ,  60 ,  -1 ,  61 ,  62 ,  63 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  65 ,  64 ,  66 ,  67 ,  68 ,  69 ,  70 ,  71 ,  72 ,  73 ,  74 ,  -1 ,  75 ,  -1 ,  -1 ,  -1 ,  76 ,  -1 ,  77 ,  78 ,  79 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  65 ,  64 ,  66 ,  67 ,  68 ,  69 ,  70 ,  71 ,  72 ,  73 ,  74 ,  -1 ,  75 ,  -1 ,  -1 ,  -1 ,  76 ,  -1 ,  77 ,  78 ,  79 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  81 ,  80 ,  82 ,  83 ,  84 ,  85 ,  86 ,  87 ,  88 ,  89 ,  90 ,  -1 ,  91 ,  -1 ,  -1 ,  -1 ,  92 ,  -1 ,  93 ,  94 ,  95 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  81 ,  80 ,  82 ,  83 ,  84 ,  85 ,  86 ,  87 ,  88 ,  89 ,  90 ,  -1 ,  91 ,  -1 ,  -1 ,  -1 ,  92 ,  -1 ,  93 ,  94 ,  95 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  97 ,  96 ,  98 ,  99 , 100 , 101 , 102 , 103 , 104 , 105 , 106 ,  -1 , 107 ,  -1 ,  -1 ,  -1 , 108 ,  -1 , 109 , 110 , 111 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  97 ,  96 ,  98 ,  99 , 100 , 101 , 102 , 103 , 104 , 105 , 106 ,  -1 , 107 ,  -1 ,  -1 ,  -1 , 108 ,  -1 , 109 , 110 , 111 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 113 , 112 , 114 , 115 , 116 , 117 , 118 , 119 , 120 , 121 , 122 ,  -1 , 123 ,  -1 ,  -1 ,  -1 , 124 ,  -1 , 125 , 126 , 127 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 113 , 112 , 114 , 115 , 116 , 117 , 118 , 119 , 120 , 121 , 122 ,  -1 , 123 ,  -1 ,  -1 ,  -1 , 124 ,  -1 , 125 , 126 , 127 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 129 , 128 , 130 , 131 , 132 , 133 , 134 , 135 , 136 , 137 , 138 ,  -1 , 139 ,  -1 ,  -1 ,  -1 , 140 ,  -1 , 141 , 142 , 143 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 129 , 128 , 130 , 131 , 132 , 133 , 134 , 135 , 136 , 137 , 138 ,  -1 , 139 ,  -1 ,  -1 ,  -1 , 140 ,  -1 , 141 , 142 , 143 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 145 , 144 , 146 , 147 , 148 , 149 , 150 , 151 , 152 , 153 , 154 ,  -1 , 155 ,  -1 ,  -1 ,  -1 , 156 ,  -1 , 157 , 158 , 159 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 145 , 144 , 146 , 147 , 148 , 149 , 150 , 151 , 152 , 153 , 154 ,  -1 , 155 ,  -1 ,  -1 ,  -1 , 156 ,  -1 , 157 , 158 , 159 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 161 , 160 , 162 , 163 , 164 , 165 , 166 , 167 , 168 , 169 , 170 ,  -1 , 171 ,  -1 ,  -1 ,  -1 , 172 ,  -1 , 173 , 174 , 175 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 161 , 160 , 162 , 163 , 164 , 165 , 166 , 167 , 168 , 169 , 170 ,  -1 , 171 ,  -1 ,  -1 ,  -1 , 172 ,  -1 , 173 , 174 , 175 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 177 , 176 , 178 , 179 , 180 , 181 , 182 , 183 , 184 , 185 , 186 ,  -1 , 187 ,  -1 ,  -1 ,  -1 , 188 ,  -1 , 189 , 190 , 191 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 177 , 176 , 178 , 179 , 180 , 181 , 182 , 183 , 184 , 185 , 186 ,  -1 , 187 ,  -1 ,  -1 ,  -1 , 188 ,  -1 , 189 , 190 , 191 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 193 , 192 , 194 , 195 , 196 , 197 , 198 , 199 , 200 , 201 , 202 ,  -1 , 203 ,  -1 ,  -1 ,  -1 , 204 ,  -1 , 205 , 206 , 207 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 193 , 192 , 194 , 195 , 196 , 197 , 198 , 199 , 200 , 201 , 202 ,  -1 , 203 ,  -1 ,  -1 ,  -1 , 204 ,  -1 , 205 , 206 , 207 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 209 , 208 , 210 , 211 , 212 , 213 , 214 , 215 , 216 , 217 , 218 ,  -1 , 219 ,  -1 ,  -1 ,  -1 , 220 ,  -1 , 221 , 222 , 223 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 209 , 208 , 210 , 211 , 212 , 213 , 214 , 215 , 216 , 217 , 218 ,  -1 , 219 ,  -1 ,  -1 ,  -1 , 220 ,  -1 , 221 , 222 , 223 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 225 , 224 , 226 , 227 , 228 , 229 , 230 , 231 , 232 , 233 , 234 ,  -1 , 235 ,  -1 ,  -1 ,  -1 , 236 ,  -1 , 237 , 238 , 239 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 225 , 224 , 226 , 227 , 228 , 229 , 230 , 231 , 232 , 233 , 234 ,  -1 , 235 ,  -1 ,  -1 ,  -1 , 236 ,  -1 , 237 , 238 , 239 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 , 241 , 240 , 242 , 243 , 244 , 245 , 246 , 247 , 248 , 249 , 250 ,  -1 , 251 ,  -1 ,  -1 ,  -1 , 252 ,  -1 , 253 , 254 , 255 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 , 241 , 240 , 242 , 243 , 244 , 245 , 246 , 247 , 248 , 249 , 250 ,  -1 , 251 ,  -1 ,  -1 ,  -1 , 252 ,  -1 , 253 , 254 , 255 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 },
            { -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 ,  -1 }};

        // These have to come after the table definition.
        private static readonly int LOOKUP_WIDTH = LOOKUP.GetUpperBound(0);
        private static readonly int LOOKUP_HEIGHT = LOOKUP.GetUpperBound(1);
        #endregion

        private const string ALPHABET = "cbdefghijklnrtuv";
        private static readonly char[] charTable = ALPHABET.ToCharArray();
        private const short INVALID = -1;
        private const int TABLE_OFFSET = (int)'A';

        /// <summary>
        /// Encodes an octet stream in MODHex.
        /// </summary>
        /// <param name="bytes">The bytes to be encoded.  Must not be null.</param>
        /// <returns>The encoded bytes.  An empty array will return an empty string.</returns>
        public static String Encode(byte[] bytes)
        {
            if (bytes == null)
            {
                throw new ArgumentNullException("bytes");
            }

            StringBuilder sb = new StringBuilder(bytes.Length * 2);

            for (int i = 0; i < bytes.Length; i++)
            {
                sb.Append(charTable[(bytes[i] >> 4) & 0x0F]);
                sb.Append(charTable[bytes[i] & 0x0F]);
            }

            return sb.ToString();
        }

        /// <summary>
        /// Decodes a MODHex-encoded string back into an octet array.
        /// </summary>
        /// <param name="encodedBytes">The bytes to be decoded.  May not be null,
        /// but an empty string is acceptable.</param>
        /// <returns>The decoded data.  If an empty string is passed in, then an empty
        /// array will be returned.</returns>
        /// <exception cref="ModHexDecodeException">Thrown if there is a problem with the encoding.</exception>
        public static byte[] Decode(string encodedBytes)
        {
            if (encodedBytes == null)
            {
                throw new ArgumentNullException("encodedBytes");
            }

            if (encodedBytes.Length % 2 != 0)
            {
                throw new ModHexEncodingException("Bad encoding.  Length is not even.");
            }

            byte[] bytes = new byte[encodedBytes.Length / 2];
            int ptr = 0;

            for (int i = 0; i < bytes.Length; i++)
            {
                int c1 = (int)(encodedBytes[ptr++]) - TABLE_OFFSET;

                if (c1 < 0 || c1 > LOOKUP_WIDTH)
                {
                    throw new ModHexEncodingException(string.Format("Bad encoding: {0}", encodedBytes[ptr - 1]));
                }

                int c2 = (int)(encodedBytes[ptr++]) - TABLE_OFFSET;

                if (c2 < 0 || c2 > LOOKUP_HEIGHT)
                {
                    throw new ModHexEncodingException(string.Format("Bad encoding: {0}", encodedBytes[ptr - 1]));
                }

                short v = LOOKUP[c1, c2];

                if (v == INVALID)
                {
                    throw new ModHexEncodingException("Bad encoding.");
                }

                bytes[i] = (byte)v;
            }

            return bytes;
        }

        public class ModHexEncodingException : Exception
        {
            public ModHexEncodingException(string message) : base(message) { }
        }
    }
}
